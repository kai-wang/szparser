use std::str::FromStr;
use crate::ast::{Expr, Opcode};

grammar;

pub Expr: Box<Expr> = {
    <l:Expr> <op:ExprOp> <r:Factor> => Box::new(Expr::Op(l, op, r)),
    Factor
};

Factor: Box<Expr> = {
    Factor FactorOp Term => Box::new(Expr::Op(<>)),
    Term
};

ExprOp: Opcode = {
    "+" => Opcode::Add,
    "-" => Opcode::Sub,
};

FactorOp: Opcode = {
    "*" => Opcode::Mul,
    "/" => Opcode::Div,
};

Term: Box<Expr> = {
    <n:Num> => Box::new(Expr::Number(n)),
    "(" <e:Expr> ")" => e,
};

Num: i32 = <s:r"[0-9]+"> => i32::from_str(s).unwrap();